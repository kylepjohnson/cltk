[project]
name = "cltk"
version = "2.0.0a"
description = "The Classical Language Toolkit"
authors = [
    {name = "Kyle P. Johnson", email = "kyle@kyle-p-johnson.com"},
    {name = "ClÃ©ment Besnier", email = "clem@clementbesnier.fr"},
]
readme = "README.rst"
homepage = "http://cltk.org"
repository = "https://github.com/cltk/cltk"
documentation = "https://docs.cltk.org"
keywords = ["nlp", "ai", "nltk", "latin", "greek", "sanskrit", "hebrew", "arabic", "chinese"]
requires-python = ">=3.11"
dependencies = [
    "tqdm (>=4.67.1,<5.0.0)",
    "openai (>=1.101.0,<2.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "pydantic (>=2.11.7,<3.0.0)",
    "colorama (>=0.4.6,<0.5.0)",
    "numpy (>=2.3.2,<3.0.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Poetry-specific packaging config
[tool.poetry]
# Ensure Poetry discovers packages from the src layout
packages = [
    { include = "cltk", from = "src" }
]
# Explicitly include data files in both sdist and wheel
include = [
    { path = "src/cltk/py.typed", format = ["sdist", "wheel"] },
    { path = "src/cltk/languages/glottolog.json", format = ["sdist", "wheel"] }
]
[tool.poetry.group.development.dependencies]
mypy = "^1.17.1"
ipython = "^9.4.0"
jupyter = "^1.1.1"
colorama = "^0.4.6"
lxml = "^6.0.1"
ruff = "^0.6.0"
pre-commit = "^3.7.0"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
syrupy = "^4.6.0"
hypothesis = "^6.112.0"

# Note: setuptools package-data is unused with poetry-core and removed

# Ruff configuration: formatter + lint (including isort rules)
[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]
fixable = ["E", "F", "I"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["cltk"]
combine-as-imports = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_ignores = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
pretty = true
show_error_codes = true
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-ra"
xfail_strict = true
filterwarnings = [
  "error::DeprecationWarning",
  "error::PendingDeprecationWarning",
]

[[tool.mypy.overrides]]
module = [
  "openai.*",
  "tqdm.*",
  "colorama.*",
]
ignore_missing_imports = true
